buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}
repositories {
    maven {
        url = project.properties['artifactory_contextUrl'] + '/gradle-dev-local'
    }
}

apply plugin: 'java'
apply plugin: 'forge'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = project.properties['version']
group = 'org.slave.minecraft'
archivesBaseName = 'MoarAchivements'

minecraft {
    version = project.properties['forge_version']
    runDir = 'run'

    replace(
            '@VERSION@',
            project.version
    )
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod/info'
        expand(
                'version': project.version,
                'mcversion': project.minecraft.version
        )
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

dependencies {
    compile(
            group: 'org.slf4j',
            name: 'slf4j-api',
            version: project.properties['sl4j-version']
    )
    compile(
            group: 'org.slf4j',
            name: 'slf4j-jdk14',
            version: project.properties['slf4j-jdk14-version']
    )

    compile(
            group: 'org.slave.lib',
            name: 'lib',
            version: project.properties['slave-lib-version']
    )
    compile(
            group: 'org.slave.lib',
            name: 'minecraft',
            version: project.properties['slave-lib-version']
    )
    compile(
            group: 'org.slave.lib',
            name: 'minecraft-asm',
            version: project.properties['slave-lib-version']
    )

    /*
    compile fileTree(
            dir: 'libs',
            exclude: [
                    '*-src.jar'
            ],
            include: [
                    '*.jar'
            ]
    )
    */
}

task makeSrcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'src'
}

task makeDevJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives makeSrcJar, makeDevJar
}
